package com.example.demo.mock.infrastructure;

import com.example.demo.user.domain.User;
import com.example.demo.user.domain.UserStatus;
import com.example.demo.user.service.port.UserRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class FakeUserRepository implements UserRepository {

    private Long autoGeneratedId = 0L;
    private final List<User> data = new ArrayList<>();

    @Override
    public Optional<User> findById(long id) {
        return data.stream().filter(user -> user.getId().equals(id)).findAny();
    }

    @Override
    public Optional<User> findByIdAndStatus(long id, UserStatus userStatus) {
        return data.stream()
                .filter(user -> user.getId().equals(id) && userStatus.equals(user.getStatus()))
                .findAny();
    }

    @Override
    public Optional<User> findByEmailAndStatus(String email, UserStatus userStatus) {
        return data.stream()
                .filter(user -> email.equals(user.getEmail()) && userStatus.equals(user.getStatus()))
                .findAny();
    }

    @Override
    public User getById(long id) {
        return findById(id).orElseThrow();
    }

    @Override
    public User save(User user) {
        if (user.getId() == null || user.getId() == 0) {
            user = User.builder()
                    .id(autoGeneratedId++)
                    .email(user.getEmail())
                    .nickname(user.getNickname())
                    .address(user.getAddress())
                    .status(user.getStatus())
                    .certificationCode(user.getCertificationCode())
                    .lastLoginAt(user.getLastLoginAt())
                    .build();
        } else {
            User finalUser = user;
            data.removeIf(item -> Objects.equals(item.getId(), finalUser.getId()));
        }
        data.add(user);
        return user;
    }
}
